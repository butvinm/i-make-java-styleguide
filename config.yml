number_of_empty_lines_to_preserve: # "1"

join_wrapped_lines: # "true"
join_lines_in_comments: # "true"
lineSplit: # "80"

tabulation:
  size: # "4"
  char: # "space"

insert_space:
  before:
    - closing_bracket_in_array_reference # "do not insert"
    - opening_brace_in_annotation_type_declaration # "insert"
    - shift_operator # "insert"
    - prefix_operator # "do not insert"
    - comma_in_record_components # "do not insert"
    - semicolon_in_for # "do not insert"
    - opening_brace_in_enum_declaration # "insert"
    - multiplicative_operator # "insert"
    - lambda_arrow # "insert"
    - opening_paren_in_for # "insert"
    - postfix_operator # "do not insert"
    - closing_paren_in_method_declaration # "do not insert"
    - closing_angle_bracket_in_parameterized_type_reference # "do not insert"
    - logical_operator # "insert"
    - assignment_operator # "insert"
    - opening_brace_in_record_declaration # "insert"
    - comma_in_enum_declarations # "do not insert"
    - comma_in_parameterized_type_reference # "do not insert"
    - string_concatenation # "insert"
    - comma_in_superinterfaces # "do not insert"
    - colon_in_labeled_statement # "do not insert"
    - parenthesized_expression_in_throw # "insert"
    - closing_angle_bracket_in_type_parameters # "do not insert"
    - opening_brace_in_array_initializer # "insert"
    - opening_paren_in_record_declaration # "do not insert"
    - colon_in_for # "insert"
    - closing_bracket_in_array_allocation_expression # "do not insert"
    - additive_operator # "insert"
    - arrow_in_switch_default # "insert"
    - opening_brace_in_block # "insert"
    - opening_paren_in_if # "insert"
    - comma_in_constructor_declaration_parameters # "do not insert"
    - opening_paren_in_try # "insert"
    - comma_in_type_parameters # "do not insert"
    - colon_in_default # "do not insert"
    - relational_operator # "insert"
    - closing_paren_in_method_invocation # "do not insert"
    - opening_brace_in_enum_constant # "insert"
    - question_in_wildcard # "do not insert"
    - closing_paren_in_record_declaration # "do not insert"
    - closing_paren_in_parenthesized_expression # "do not insert"
    - opening_brace_in_anonymous_type_declaration # "insert"
    - closing_brace_in_array_initializer # "insert"
    - arrow_in_switch_case # "insert"
    - parenthesized_expression_in_return # "insert"
    - comma_in_switch_case_expressions # "do not insert"
    - comma_in_method_declaration_throws # "do not insert"
    - closing_paren_in_while # "do not insert"
    - comma_in_allocation_expression # "do not insert"
    - at_in_annotation_type_declaration # "insert"
    - comma_in_for_inits # "do not insert"
    - closing_paren_in_for # "do not insert"
    - opening_paren_in_annotation # "do not insert"
    - comma_in_method_invocation_arguments # "do not insert"
    - opening_brace_in_switch # "insert"
    - opening_brace_in_type_declaration # "insert"
    - comma_in_array_initializer # "do not insert"
    - comma_in_annotation # "do not insert"
    - opening_brace_in_record_constructor # "insert"
    - opening_paren_in_catch # "insert"
    - opening_paren_in_method_invocation # "do not insert"
    - bitwise_operator # "insert"
    - unary_operator # "do not insert"
    - ellipsis # "do not insert"
    - semicolon_in_try_resources # "do not insert"
    - closing_paren_in_if # "do not insert"
    - comma_in_type_arguments # "do not insert"
    - and_in_type_parameter # "insert"
    - closing_paren_in_constructor_declaration # "do not insert"
    - opening_paren_in_while # "insert"
    - closing_paren_in_switch # "do not insert"
    - closing_paren_in_synchronized # "do not insert"
    - closing_paren_in_try # "do not insert"
    - opening_paren_in_parenthesized_expression # "do not insert"
    - opening_paren_in_enum_constant # "do not insert"
    - opening_paren_in_constructor_declaration # "do not insert"
    - colon_in_conditional # "insert"
    - opening_angle_bracket_in_parameterized_type_reference # "do not insert"
    - comma_in_method_declaration_parameters # "do not insert"
    - closing_angle_bracket_in_type_arguments # "do not insert"
    - closing_paren_in_cast # "do not insert"
    - colon_in_assert # "insert"
    - opening_bracket_in_array_type_reference # "do not insert"
    - semicolon # "do not insert"
    - opening_angle_bracket_in_type_arguments # "do not insert"
    - opening_angle_bracket_in_type_parameters # "do not insert"
    - opening_bracket_in_array_allocation_expression # "do not insert"
    - opening_brace_in_method_declaration # "insert"
    - closing_paren_in_catch # "do not insert"
    - comma_in_enum_constant_arguments # "do not insert"
    - colon_in_case # "do not insert"
    - comma_in_multiple_local_declarations # "do not insert"
    - opening_bracket_in_array_reference # "do not insert"
    - opening_paren_in_method_declaration # "do not insert"
    - opening_paren_in_synchronized # "insert"
    - comma_in_for_increments # "do not insert"
    - opening_paren_in_annotation_type_member_declaration # "do not insert"
    - closing_paren_in_enum_constant # "do not insert"
    - comma_in_explicitconstructorcall_arguments # "do not insert"
    - closing_paren_in_annotation # "do not insert"
    - opening_brace_in_constructor_declaration # "insert"
    - comma_in_constructor_declaration_throws # "do not insert"
    - question_in_conditional # "insert"
    - comma_in_multiple_field_declarations # "do not insert"
    - opening_paren_in_switch # "insert"

  after:
    - shift_operator # "insert"
    - comma_in_enum_constant_arguments # "insert"
    - closing_paren_in_cast # "insert"
    - opening_paren_in_if # "do not insert"
    - opening_bracket_in_array_allocation_expression # "do not insert"
    - opening_paren_in_while # "do not insert"
    - at_in_annotation_type_declaration # "do not insert"
    - opening_brace_in_array_initializer # "insert"
    - opening_paren_in_record_declaration # "do not insert"
    - question_in_wildcard # "do not insert"
    - at_in_annotation # "do not insert"
    - bitwise_operator # "insert"
    - relational_operator # "insert"
    - opening_paren_in_synchronized # "do not insert"
    - opening_paren_in_annotation # "do not insert"
    - opening_paren_in_enum_constant # "do not insert"
    - colon_in_labeled_statement # "insert"
    - colon_in_case # "insert"
    - comma_in_array_initializer # "insert"
    - comma_in_method_invocation_arguments # "insert"
    - comma_in_superinterfaces # "insert"
    - comma_in_switch_case_expressions # "insert"
    - comma_in_parameterized_type_reference # "insert"
    - closing_angle_bracket_in_type_arguments # "do not insert"
    - colon_in_for # "insert"
    - and_in_type_parameter # "insert"
    - multiplicative_operator # "insert"
    - opening_paren_in_switch # "do not insert"
    - comma_in_explicitconstructorcall_arguments # "insert"
    - closing_brace_in_block # "insert"
    - opening_angle_bracket_in_parameterized_type_reference # "do not insert"
    - comma_in_multiple_local_declarations # "insert"
    - comma_in_for_increments # "insert"
    - postfix_operator # "do not insert"
    - comma_in_constructor_declaration_parameters # "insert"
    - comma_in_enum_declarations # "insert"
    - ellipsis # "insert"
    - logical_operator # "insert"
    - comma_in_type_arguments # "insert"
    - arrow_in_switch_default # "insert"
    - semicolon_in_for # "insert"
    - prefix_operator # "do not insert"
    - opening_paren_in_catch # "do not insert"
    - opening_angle_bracket_in_type_arguments # "do not insert"
    - comma_in_for_inits # "insert"
    - assignment_operator # "insert"
    - opening_paren_in_for # "do not insert"
    - comma_in_multiple_field_declarations # "insert"
    - question_in_conditional # "insert"
    - additive_operator # "insert"
    - colon_in_assert # "insert"
    - string_concatenation # "insert"
    - opening_paren_in_parenthesized_expression # "do not insert"
    - opening_paren_in_method_invocation # "do not insert"
    - comma_in_constructor_declaration_throws # "insert"
    - comma_in_record_components # "insert"
    - comma_in_allocation_expression # "insert"
    - opening_bracket_in_array_reference # "do not insert"
    - colon_in_conditional # "insert"
    - semicolon_in_try_resources # "insert"
    - not_operator # "do not insert"
    - comma_in_method_declaration_parameters # "insert"
    - closing_angle_bracket_in_type_parameters # "insert"
    - unary_operator # "do not insert"
    - opening_paren_in_constructor_declaration # "do not insert"
    - arrow_in_switch_case # "insert"
    - opening_paren_in_try # "do not insert"
    - opening_paren_in_cast # "do not insert"
    - opening_paren_in_method_declaration # "do not insert"
    - comma_in_method_declaration_throws # "insert"
    - comma_in_type_parameters # "insert"
    - comma_in_annotation # "insert"
    - opening_angle_bracket_in_type_parameters # "do not insert"
    - lambda_arrow # "insert"

  between:
    - brackets_in_array_type_reference # "do not insert"
    - empty_parens_in_constructor_declaration # "do not insert"
    - empty_parens_in_method_declaration # "do not insert"
    - empty_brackets_in_array_allocation_expression # "do not insert"
    - empty_parens_in_annotation_type_member_declaration # "do not insert"
    - empty_parens_in_enum_constant # "do not insert"
    - empty_parens_in_method_invocation # "do not insert"
    - empty_braces_in_array_initializer # "do not insert"

parentheses:
  - positions_in_for_statment # "common_lines"
  - positions_in_method_invocation # "preserve_positions"
  - positions_in_record_declaration # "common_lines"
  - positions_in_switch_statement # "common_lines"
  - positions_in_enum_constant_declaration # "common_lines"
  - positions_in_if_while_statement # "common_lines"
  - positions_in_catch_clause # "common_lines"
  - positions_in_annotation # "common_lines"
  - positions_in_try_clause # "common_lines"
  - positions_in_method_delcaration # "common_lines"
  - positions_in_lambda_declaration # "common_lines"

comment:
  - new_lines_at_block_boundaries # "true"
  - insert_new_line_for_parameter # "do not insert"
  - insert_new_line_before_root_tags # "insert"
  - format_javadoc_comments # "true"
  - indent_root_tags # "false"
  - count_line_length_from_starting_position # "true"
  -
  - line_length # "80"
  - preserve_white_space_between_code_and_line_comments # "false"
  - clear_blank_lines_in_block_comment # "false"
  - clear_blank_lines_in_javadoc_comment # "false"
  - format_line_comments # "true"
  -
  - insert_new_line_between_different_tags # "do not insert"
  - format_header # "false"
  - new_lines_at_javadoc_boundaries # "true"
  - format_source_code # "true"
  - format_html # "true"
  - format_block_comments # "true"
  - indent_tag_description # "false"
  - indent_parameter_description # "false"

insert_new_line:
  after:
    - after_annotation_on_package # "insert"
    - after_annotation_on_parameter # "do not insert"
    - after_annotation_on_field # "insert"
    - after_annotation_on_method # "insert"
    - after_annotation_on_enum_constant # "insert"
    - after_annotation_on_local_variable # "insert"
    - after_annotation_on_type # "insert"
    - after_type_annotation # "do not insert"
    - after_label # "do not insert"
    - after_opening_brace_in_array_initializer # "do not insert"

  before:
    - before_catch_in_try_statement # "do not insert"
    - before_closing_brace_in_array_initializer # "do not insert"
    - before_else_in_if_statement # "do not insert"
    - before_while_in_do_statement # "do not insert"
    - before_finally_in_try_statement # "do not insert"

  at_end_of_file_if_missing: # "insert"

blank_lines:
  after:
    - imports # "1"
    - package # "1"
    - code_block # "0"
    - last_class_body_declaration # "0"

  before:
    - imports # "1"
    - abstract_method # "1"
    - first_class_body_declaration # "0"
    - field # "0"
    - method # "1"
    - new_chunk # "1"
    - member_type # "1"
    - package # "0"

  between:
    - type_declarations # "1"
    - statement_group_in_switch # "0"
    - import_groups # "1"

  number:
    - before_code_block # "0"
    - at_end_of_method_body # "0"
    - at_beginning_of_method_body # "0"
    - at_end_of_code_block # "0"
    - at_beginning_of_code_block # "0"

wrap:
  before:
    - before_or_operator_multicatch # "true"
    - before_multiplicative_operator # "true"
    - before_shift_operator # "true"
    - before_assertion_message_operator # "true"
    - before_conditional_operator # "true"
    - before_assignment_operator # "false"
    - before_bitwise_operator # "true"
    - before_relational_operator # "true"
    - before_logical_operator # "true"
    - before_additive_operator # "true"
    - before_string_concatenation # "true"

  outer_expressions_when_nested: # "true"

alignment_for:
  - enum_constants # "16"
  - arguments_in_enum_constant # "16"
  - record_components # "16"
  - throws_clause_in_method_declaration # "16"
  - parameterized_type_references # "0"
  - logical_operator # "16"
  - union_type_in_multicatch # "16"
  - additive_operator # "16"
  - arguments_in_explicit_constructor_call # "16"
  - multiplicative_operator # "16"
  - parameters_in_constructor_declaration # "16"
  - type_parameters # "0"
  - arguments_in_method_invocation # "16"
  - throws_clause_in_constructor_declaration # "16"
  - compact_loops # "16"
  - relational_operator # "0"
  - expressions_in_array_initializer # "16"
  - assignment # "0"
  - module_statements # "16"
  - superinterfaces_in_type_declaration # "16"
  - conditional_expression # "80"
  - conditional_expression_chain # "0"
  - arguments_in_allocation_expression # "16"
  - method_declaration # "0"
  - shift_operator # "0"
  - bitwise_operator # "16"
  - resources_in_try # "80"
  - selector_in_method_invocation # "16"
  - superclass_in_type_declaration # "16"
  - superinterfaces_in_enum_declaration # "16"
  - compact_if # "16"
  - type_arguments # "0"
  - arguments_in_annotation # "0"
  - assertion_message # "16"
  - arguments_in_qualified_allocation_expression # "16"
  - superinterfaces_in_record_declaration # "16"
  - parameters_in_method_declaration # "16"
  - string_concatenation # "16"
  - multiple_fields # "16"
  - expressions_in_for_loop_header # "0"

brace_position_for:
  - anonymous_type_declaration # "end_of_line"
  - method_declaration # "end_of_line"
  - block # "end_of_line"
  - constructor_declaration # "end_of_line"
  - lambda_body # "end_of_line"
  - record_declaration # "end_of_line"
  - enum_declaration # "end_of_line"
  - block_in_case # "end_of_line"
  - annotation_type_declaration # "end_of_line"
  - switch # "end_of_line"
  - record_constructor # "end_of_line"
  - array_initializer # "end_of_line"
  - enum_constant # "end_of_line"
  - type_declaration # "end_of_line"

keep:
  - then_statement_on_same_line # "false"
  - annotation_declaration_on_one_line # "one_line_never"
  - method_body_on_one_line # "one_line_never"
  - loop_body_block_on_one_line # "one_line_never"
  - enum_constant_declaration_on_one_line # "one_line_never"
  - type_declaration_on_one_line # "one_line_never"
  - else_statement_on_same_line # "false"
  - anonymous_type_declaration_on_one_line # "one_line_never"
  - record_declaration_on_one_line # "one_line_never"
  - simple_for_body_on_same_line # "false"
  - if_then_body_block_on_one_line # "one_line_never"
  - code_block_on_one_line # "one_line_never"
  - lambda_body_block_on_one_line # "one_line_never"
  - record_constructor_on_one_line # "one_line_never"
  - empty_array_initializer_on_one_line # "false"
  - imple_if_on_one_line # "false"
  - simple_while_body_on_same_line # "false"
  - simple_do_while_body_on_same_line # "false"
  - enum_declaration_on_one_line # "one_line_never"
  - simple_getter_setter_on_one_line # "false"

align:
  - tags_descriptions_grouped # "true"
  - tags_names_descriptions # "false"
  - with_spaces # "false"
  - variable_declarations_on_columns # "false"
  - type_members_on_columns # "false"
  - assignment_statements_on_columns # "false"
  - fields_grouping_blank_lines # "2147483647"

indentation.size: # "4"
continuation_indentation: # "1"
continuation_indentation_for_array_initializer: # "2"
text_block_indentation: # "0"
never_indent_line_comments_on_first_column: # "false"
never_indent_block_comments_on_first_column: # "false"

indent:
  - statements_compare_to_block # "true"
  - body_declarations_compare_to_annotation_declaration_header # "true"
  - body_declarations_compare_to_type_header # "true"
  - switchstatements_compare_to_cases # "true"
  - empty_lines # "false"
  - switchstatements_compare_to_switch # "false"
  - body_declarations_compare_to_enum_declaration_header # "true"
  - body_declarations_compare_to_record_header # "true"
  - breaks_compare_to_cases # "true"
  - statements_compare_to_body # "true"
  - body_declarations_compare_to_enum_constant_header # "true"

disabling_tag: # "@formatter:off"
enabling_tag: # "@formatter:on"
use_on_off_tags: # "false"
compact_else_if: # "true"
put_empty_statement_on_new_line: # "true"
format_line_comment_starting_on_first_column: # "false"
format_guardian_clause_on_one_line: # "false"
use_tabs_only_for_leading_indentations: # "false"

